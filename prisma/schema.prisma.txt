enum Role {
  admin
  user
}

model Product {
  id          String   @id @default(uuid())
  stock       Stock? // TODO AVERIGUAR COMO HACERLO
  slug        String   @unique
  tags        String[] @default([])

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  ProductImage ProductImage[]

  @@index([name], name: "idx_name")

  @@index([gender]) //TODO AVERIGUAR PARA QUE LO USA // ESTO NO SE USA EN MI PROYECTO
}

model Stock {
  id_product  Int
  stock       Int       @default(0)
  last_update DateTime  @updatedAt
  product     Product   @relation(fields: [id_product], references: [id_product])
  @@id([id_product])
}

model ProductImage {
  id  Int    @id @default(autoincrement())
  url String

  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model User {
  emailVerified DateTime?
  role          Role      @default(user)
  image         String?

  address UserAddress?

  @@index([email], name: "idx_email") //TODO INVESTIGAR SOBRE ESTO
}

model Country {
  id   String @id
  name String

  UserAddress  UserAddress[]
  OrderAddress OrderAddress[]
}

model UserAddress {
  id         String  @id @default(uuid())
  firstName  String
  lastName   String
  address    String
  address2   String?
  postalCode String
  phone      String
  city       String

  // Relaciones
  country   Country @relation(fields: [countryId], references: [id])
  countryId String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model Order {
  id           String    @id @default(uuid())
  subTotal     Float
  tax          Float
  itemsInOrder Int
  paidAt       DateTime?
  updatedAt DateTime @updatedAt

  OrderAddress OrderAddress?

  transactionId String?
}

model OrderItem {
  id       String @id @default(uuid())
  
  @@id([id_order, id_product])
}

model OrderAddress {
  id         String  @id @default(uuid())
  firstName  String
  lastName   String
  address    String
  address2   String?
  postalCode String
  city       String
  phone      String

  // Relaciones
  country   Country @relation(fields: [countryId], references: [id])
  countryId String

  Order   Order  @relation(fields: [orderId], references: [id])
  orderId String @unique
}



//NO SE USA EN TESLOSHOP
model Cart {
  id_cart     Int         @id @default(autoincrement())
  id_user     Int
  last_update DateTime    @default(now()) @updatedAt
  user        User        @relation(fields: [id_user], references: [id_user])
  cartDetails CartDetail[]
}

model CartDetail {
  id_cart    Int
  id_product Int
  quantity   Int
  cart       Cart       @relation(fields: [id_cart], references: [id_cart])
  product    Product    @relation(fields: [id_product], references: [id_product])
  @@id([id_cart, id_product])
}


model Favorite {
  id_user    Int
  id_product Int
  user       User       @relation(fields: [id_user], references: [id_user])
  product    Product    @relation(fields: [id_product], references: [id_product])
  @@id([id_user, id_product])
}

model User {
  Favorite    Favorite[]
  Cart        Cart[]
}


model Brand {
  id_brand   Int        @id @default(autoincrement())
  brand      String
  products   Product[]
}

model Product {
  favorites           Favorite[]
  cartDetails         CartDetail[]

   brand               Brand?        @relation(fields: [id_brand], references: [id_brand])
   id_brand            Int?
}

